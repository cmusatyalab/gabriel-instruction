syntax = "proto3";

package instruction;

option java_package = "edu.cmu.cs.gabriel.instruction";
option java_outer_classname = "Protos";

// Wrap each enum in a message to allow duplicate value names
message Ikea {
    enum State {
        START = 0;
        NOTHING = 1;
        BASE = 2;
        PIPE = 3;
        SHADE = 4;
        BUCKLE = 5;
        BLACK_CIRCLE = 6;
        SHADE_BASE = 7;
        BULB = 8;
        BULB_TOP = 9;
    }

    State state = 1;
    int32 frames_with_one_buckle = 2;
    int32 frames_with_two_buckles = 3;
}

message Sandwich {
    enum State {
        START = 0;
        NOTHING = 1;
        BREAD = 2;
        HAM = 3;
        LETTUCE = 4;
        CUCUMBER = 5;
        HALF = 6;
        TOMATO = 7;
        HAM_WRONG = 8;
        FULL = 9;
    }

    State state = 1;
    double holo_x = 2;
    double holo_y = 3;
    double holo_depth = 4;
}

message LEGOState {
    enum STATUS {
        INIT = 0;
        WAITING_FOR_BOARD = 1;
        NORMAL = 2;
        ERROR = 3;
        FINISHED = 4;
    }

    enum FRAME_RESULT  {
        NO_CHANGE = 0;
        SUCCESS = 1;
        TASK_ERROR = 2;
        JUNK_FRAME = 3;
        LOW_CONFIDENCE_RECON = 4;
        OTHER_CV_ERROR = 5;
    }

    message Timestamps {
        // unix epoch in seconds
        double received = 1;
        double sent = 2;
    }

    string task_id = 1; // task currently performing
    Timestamps timestamps = 2;
    STATUS status = 3;
    FRAME_RESULT result = 4;
    int32 target_state_index = 5; // step we want to reach
    int32 current_state_index = 6; // previous good step

    bytes error_prev_board_state = 7; // optional buffer for error state
}

message EngineFields {
    int64 update_count = 1;
    oneof state {
        Ikea ikea = 2;
        Sandwich sandwich = 3;
        LEGOState lego = 4;
    }
}
